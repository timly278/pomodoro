basePath: /api/v1
definitions:
  db.Pomodoro:
    properties:
      created_at:
        type: string
      focus_degree:
        type: integer
      id:
        type: integer
      task_id:
        $ref: '#/definitions/sql.NullInt64'
      type_id:
        type: integer
      user_id:
        type: integer
    type: object
  db.Type:
    properties:
      autostart_break:
        type: boolean
      color:
        type: string
      duration:
        type: integer
      goalperday:
        type: integer
      id:
        type: integer
      longbreak:
        type: integer
      longbreakinterval:
        type: integer
      name:
        type: string
      shortbreak:
        type: integer
      user_id:
        type: integer
    type: object
  delivery.CreateNewTypeRequest:
    properties:
      autostart_break:
        type: boolean
      color:
        type: string
      duration:
        minimum: 1
        type: integer
      goal_per_day:
        minimum: 1
        type: integer
      longbreak:
        minimum: 1
        type: integer
      longbreakinterval:
        minimum: 1
        type: integer
      name:
        type: string
      shortbreak:
        minimum: 1
        type: integer
    required:
    - autostart_break
    - color
    - duration
    - goal_per_day
    - longbreak
    - longbreakinterval
    - name
    - shortbreak
    type: object
  delivery.CreatePomodoroRequest:
    properties:
      focus_degree:
        maximum: 5
        minimum: 1
        type: integer
      task_id:
        type: integer
      type_id:
        minimum: 1
        type: integer
    required:
    - focus_degree
    - type_id
    type: object
  delivery.CreateUserRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 12
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  delivery.GetPomodorosRequest:
    properties:
      from_date:
        type: string
      limit:
        minimum: 1
        type: integer
      page:
        minimum: 1
        type: integer
      to_date:
        type: string
    required:
    - from_date
    - limit
    - page
    - to_date
    type: object
  delivery.GetStatisticRequest:
    properties:
      from_date:
        type: string
      to_date:
        type: string
    required:
    - from_date
    - to_date
    type: object
  delivery.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 12
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  delivery.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  delivery.SendCodeRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  delivery.UpdateUserSettingRequest:
    properties:
      alarm_sound:
        type: string
      repeat_alarm:
        maximum: 10
        minimum: 1
        type: integer
      username:
        type: string
    required:
    - alarm_sound
    - repeat_alarm
    - username
    type: object
  delivery.VerificationRequest:
    properties:
      code:
        type: string
      email:
        type: string
    required:
    - code
    - email
    type: object
  gin.H:
    additionalProperties: {}
    type: object
  response.response:
    properties:
      data: {}
      message:
        type: string
    type: object
  sql.NullInt64:
    properties:
      int64:
        type: integer
      valid:
        description: Valid is true if Int64 is not NULL
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: Pomodoro Application Api Server. This app helps people study and work
    at better productivity.
  title: Pomodoro API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Loggin user
      parameters:
      - description: user login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/delivery.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: password does not match
          schema:
            $ref: '#/definitions/gin.H'
        "406":
          description: email has not verified
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: internal serever error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Loggin user
      tags:
      - auth
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refresh access token
      parameters:
      - description: refresh access token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/delivery.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Refresh token is unauthorized
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal serever error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create new user and send verification code to email
      parameters:
      - description: Create new user
        in: body
        name: NewUser
        required: true
        schema:
          $ref: '#/definitions/delivery.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "406":
          description: email spam, verification code has created and sent
          schema:
            $ref: '#/definitions/gin.H'
        "409":
          description: email existed
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: internal serever error
          schema:
            $ref: '#/definitions/gin.H'
      summary: New user registers
      tags:
      - auth
  /auth/send-emailverification:
    post:
      consumes:
      - application/json
      description: Send verification code
      parameters:
      - description: send code
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/delivery.SendCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "406":
          description: email spam, verification code has created and sent
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: internal serever error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Send email for verification code
      tags:
      - auth
  /auth/verify-code:
    post:
      consumes:
      - application/json
      description: Verify code that sent over email
      parameters:
      - description: verify code
        in: body
        name: Email&Code
        required: true
        schema:
          $ref: '#/definitions/delivery.VerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: email has been verified successfully
          schema:
            $ref: '#/definitions/response.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Verify email verification code
      tags:
      - auth
  /jobs/accessed-days:
    get:
      consumes:
      - application/json
      description: Get total days user has accessed on pomodoro from date to date
      parameters:
      - description: Get days
        in: body
        name: DateToDate
        required: true
        schema:
          $ref: '#/definitions/delivery.GetStatisticRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get days accessed
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal serever error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get Days Accessed
      tags:
      - jobs
  /jobs/focused-minutes:
    get:
      consumes:
      - application/json
      description: Get total minutes user has spent on pomodoro from date to date
      parameters:
      - description: Get minutes
        in: body
        name: DateToDate
        required: true
        schema:
          $ref: '#/definitions/delivery.GetStatisticRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get minutes focused
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal serever error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get Minutes Focused
      tags:
      - jobs
  /jobs/pomodoros:
    get:
      consumes:
      - application/json
      description: Get pomodoros from date to date
      parameters:
      - description: Get pomodoros
        in: body
        name: GetPomos
        required: true
        schema:
          $ref: '#/definitions/delivery.GetPomodorosRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Pomodoro'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal serever error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List Pomodoros
      tags:
      - jobs
    post:
      consumes:
      - application/json
      description: Create new pomodoro
      parameters:
      - description: New pomodoro
        in: body
        name: NewPomo
        required: true
        schema:
          $ref: '#/definitions/delivery.CreatePomodoroRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Pomodoro'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not found user_id or type_id
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal serever error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create New Pomodoro
      tags:
      - jobs
  /jobs/types:
    get:
      consumes:
      - application/json
      description: Get all pomodoros type of this user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.response'
        "500":
          description: Internal serever error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get Pomodoro Types
      tags:
      - jobs
    post:
      consumes:
      - application/json
      description: Create new pomodoro types
      parameters:
      - description: New pomodoro type
        in: body
        name: NewPomoType
        required: true
        schema:
          $ref: '#/definitions/delivery.CreateNewTypeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal serever error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create New Pomodoro Types
      tags:
      - jobs
    put:
      consumes:
      - application/json
      description: Update pomodoros type of this user
      parameters:
      - description: Type ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update pomo type
        in: body
        name: type
        required: true
        schema:
          $ref: '#/definitions/delivery.CreateNewTypeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update type successfully
          schema:
            $ref: '#/definitions/db.Type'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not found user_id or type_id
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal serever error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update Pomodoro Types
      tags:
      - jobs
  /jobs/update-user-setting:
    put:
      consumes:
      - application/json
      description: Update user setting
      parameters:
      - description: Update user setting
        in: body
        name: userSetting
        required: true
        schema:
          $ref: '#/definitions/delivery.UpdateUserSettingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update user setting successfully
          schema:
            $ref: '#/definitions/response.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal serever error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update User Setting
      tags:
      - jobs
swagger: "2.0"
